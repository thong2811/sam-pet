<?php
/**
 * @var Laminas\View\Renderer\PhpRenderer $this
 */
?>
<div class="container mt-5">
    <h1 class="mb-5"> Quản lý kho</h1>
    <div class="container row" style="font-size: 10px">
        <div class="alert alert-info p-2 col-2 float-start">Tổng tồn (giá nhập):
            <span class="fw-bold" id="totalRemainStock_purchasePrice"></span>
        </div>
        <div class="alert alert-info p-2 col-2 float-start ms-2">Tổng tồn (giá bán):
            <span class="fw-bold" id="totalRemainStock_sellingPrice"></span>
        </div>
        <div class="alert alert-info p-2 col-2 float-start ms-2">Lợi nhuận sau khi bán:
            <span class="fw-bold" id="totalProfit"></span>
        </div>
    </div>
    <div class="my-2">
        <button class="btn btn-primary" onclick="openAddModal()">Thêm mới +</button>
    </div>
    <table id="dataTable" class="table table-striped" style="width:100%">
        <thead>
        <tr>
            <th>STT</th>
            <th>Tên</th>
            <th>Đơn vị</th>
            <th>Giá nhập</th>
            <th>Giá bán</th>
            <th>Lãi</th>
            <th>Tồn đầu kỳ</th>
            <th>Nhập</th>
            <th>Xuất</th>
            <th>Còn lại</th>
            <th>Cập nhật</th>
            <th>Thao tác</th>
        </tr>
        </thead>
    </table>
</div>
<div id="editProductModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chỉnh sửa sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post">
                    <div>
                        <input type="hidden" id="productId" name="id">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Tên</label>
                        <input type="text" class="form-control" id="name" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Đơn vị</label>
                        <input type="text" class="form-control" id="unit" name="unit" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Giá nhập</label>
                        <div class="input-group">
                            <span class="input-group-text">VNĐ</span>
                            <input type="text" class="form-control" id="purchasePrice" name="purchasePrice" required">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Giá bán</label>
                        <div class="input-group">
                            <span class="input-group-text">VNĐ</span>
                            <input type="text" class="form-control" id="sellingPrice" name="sellingPrice">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Tồn đầu kì</label>
                        <input type="number" class="form-control" id="initStock" name="initStock" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="doEdit()">Lưu</button>
            </div>
        </div>
    </div>
</div>

<div id="addProductModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post">
                    <div class="mb-3">
                        <label class="form-label">Tên</label>
                        <input type="text" class="form-control" id="name" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Đơn vị</label>
                        <input type="text" class="form-control" id="unit" name="unit" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Giá nhập</label>
                        <div class="input-group">
                            <span class="input-group-text">VNĐ</span>
                            <input type="text" class="form-control" id="purchasePrice" name="purchasePrice" required">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Giá bán</label>
                        <div class="input-group">
                            <span class="input-group-text">VNĐ</span>
                            <input type="text" class="form-control" id="sellingPrice" name="sellingPrice">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Tồn đầu kì</label>
                        <input type="number" class="form-control" id="initStock" name="initStock" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="doAdd()">Thêm</button>
            </div>
        </div>
    </div>
</div>
<script>
    const controllerName = 'product';

    const table = initDataTable('#dataTable', {
        ...DATA_TABLES_CONFIG,
        ajax: {
            url: `${controllerName}/data-table-server-side'`,
            type: 'POST',
            dataSrc: (json) => {
                reloadHeaderInfo(json);
                return json.data || {};
            }
        },
        columns: [
            { name: 'no', data: 'no' },
            { name: 'name', data: 'name' },
            { name: 'unit', data: 'unit' },
            { name: 'purchasePrice', data: 'purchasePrice', render: $.fn.dataTable.render.number( ',') },
            { name: 'sellingPrice', data: 'sellingPrice', render: $.fn.dataTable.render.number( ',') },
            { name: 'profit', data: 'profit', render: $.fn.dataTable.render.number( ',') },
            { name: 'initStock', data: 'initStock' },
            { name: 'importStock', data: 'importStock' },
            { name: 'exportStock', data: 'exportStock' },
            { name: 'remainStock', data: 'remainStock' },
            { name: 'updatedAt', data: 'updatedAt' },
            { name: 'action', data: 'action' }
        ],
        serverSide: true
    });

    function reloadHeaderInfo(json) {
        const totalRemainStock_purchasePrice = json.totalRemainStock_purchasePrice || 0;
        const totalRemainStock_sellingPrice = json.totalRemainStock_sellingPrice || 0;
        const totalProfit = totalRemainStock_sellingPrice - totalRemainStock_purchasePrice;

        $('#totalRemainStock_purchasePrice').html(formatNumber(totalRemainStock_purchasePrice) + ' VNĐ');
        $('#totalRemainStock_sellingPrice').html(formatNumber(totalRemainStock_sellingPrice) + ' VNĐ');
        $('#totalProfit').html(formatNumber(totalProfit) + ' VNĐ');
    }


    const editModalId = '#editProductModal';
    const editModal = initModal(editModalId);

    const addModalId = '#addProductModal';
    const addModal = initModal(addModalId);

    function openEditModal(id) {
        clearModalForm(editModalId);
        const data = getDataById(id);

        loadEditModalData(data);
        editModal.show();
    }

    function openAddModal() {
        clearModalForm(addModalId);
        addModal.show();
    }

    function getDataById(id) {
        const data = table.data().toArray();

        const row = data.find((row) => {
            return row.id && row.id === id;
        })

        return row || {};
    }

    function loadEditModalData(data) {
        const id = data.id || '';
        const name = data.name || '';
        const unit = data.unit || '';
        const purchasePrice = data.purchasePrice || '';
        const sellingPrice = data.sellingPrice || '';
        const initStock = data.initStock || '';

        $(editModalId).find('#productId').val(id);
        $(editModalId).find('#name').val(name);
        $(editModalId).find('#unit').val(unit);
        $(editModalId).find('#purchasePrice').val(purchasePrice);
        $(editModalId).find('#sellingPrice').val(sellingPrice);
        $(editModalId).find('#initStock').val(initStock);
    }

    function doAdd() {
        if (!validateModalForm(addModalId)) {
            return;
        }

        $.ajax({
            url: `/${controllerName}/do-add`,
            type: 'POST',
            data: $(addModalId).find('form').serialize(),
            success: function (response) {
                if (response.success) {
                    table.draw(false);
                    addModal.hide();
                    addFlashMessage(`Thêm thành công`);
                } else {
                    addFlashMessage(`Đã xảy ra lỗi khi thêm. ${response.message || 'error unknown'}`, FLASH_MESSAGE_TYPE_ERROR);
                }
            },
            error: function (xhr, status, error) {
                addFlashMessage('Đã xảy ra lỗi khi thêm: ' + error, FLASH_MESSAGE_TYPE_ERROR);
            }
        });
    }

    function doEdit() {
        if (!validateModalForm(editModalId)) {
            return;
        }

        $.ajax({
            url: `/${controllerName}/do-edit`,
            type: 'POST',
            data: $(editModalId).find('form').serialize(),
            success: function (response) {
                if (response.success) {
                    table.draw(false);
                    editModal.hide();
                    addFlashMessage(`Cập nhật thành công`);
                } else {
                    addFlashMessage(`Đã xảy ra lỗi khi cập nhật. ${response.message || 'error unknown'}`, FLASH_MESSAGE_TYPE_ERROR);
                }
            },
            error: function (xhr, status, error) {
                addFlashMessage('Đã xảy ra lỗi khi cập nhật: ' + error, FLASH_MESSAGE_TYPE_ERROR);
            }
        });
    }

    function remove(id) {
        if (!confirm('Bạn có chắc chắn muốn xóa?')) {
            return;
        }

        $.ajax({
            url: `/${controllerName}/do-delete`,
            type: 'DELETE',
            contentType: 'application/json',
            data: JSON.stringify({ id: id }),
            success: function (response) {
                if (response.success) {
                    table.draw(false);
                    addFlashMessage(`Xoá thành công`);
                } else {
                    addFlashMessage(`Đã xảy ra lỗi khi xóa. ${response.message || 'error unknown'}`, FLASH_MESSAGE_TYPE_ERROR);
                }
            },
            error: function (xhr, status, error) {
                addFlashMessage('Đã xảy ra lỗi khi xóa: ' + error, FLASH_MESSAGE_TYPE_ERROR);
            }
        });
    }
</script>